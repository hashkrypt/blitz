function _class_call_check(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
import assert from 'assert';
import { isInt } from '../validations.js';
export var Pager = function Pager() {
    "use strict";
    var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {
        page: 1,
        limit: 100
    }, limit = _ref.limit, page = _ref.page;
    _class_call_check(this, Pager);
    _define_property(this, "limit", void 0);
    _define_property(this, "page", void 0);
    assert(isInt(limit) && limit > 0, 'Invalid limit');
    assert(isInt(page) && page > 0, 'Invalid page');
    this.limit = limit;
    this.page = page;
};
