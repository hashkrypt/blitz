"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "Api", {
    enumerable: true,
    get: function() {
        return Api;
    }
});
var _constants = require("./constants.js");
function _array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _class_call_check(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _create_class(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function _non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _sliced_to_array(arr, i) {
    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();
}
function _unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);
}
function _ts_generator(thisArg, body) {
    var f, y, t, g, _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    };
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(_)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
}
var Api = /*#__PURE__*/ function() {
    "use strict";
    function Api(config) {
        _class_call_check(this, Api);
        _define_property(this, "baseUrl", void 0);
        _define_property(this, "networkId", void 0);
        _define_property(this, "httpClient", void 0);
        _define_property(this, "authHeader", void 0);
        this.baseUrl = config.baseUrl || _constants.DEV_PORTAL_LIMIT_ORDER_BASE_URL;
        this.networkId = config.networkId;
        this.httpClient = config.httpConnector;
        this.authHeader = "Bearer ".concat(config.authKey);
    }
    _create_class(Api, [
        {
            key: "submitOrder",
            value: /**
     * Submit order to orderbook
     * @param order
     * @param signature
     */ function submitOrder(order, signature) {
                var _this = this;
                return _async_to_generator(function() {
                    return _ts_generator(this, function(_state) {
                        switch(_state.label){
                            case 0:
                                return [
                                    4,
                                    _this.httpClient.post(_this.url('/'), {
                                        orderHash: order.getOrderHash(_this.networkId),
                                        signature: signature,
                                        data: _object_spread_props(_object_spread({}, order.build()), {
                                            extension: order.extension.encode()
                                        })
                                    }, _this.headers())
                                ];
                            case 1:
                                _state.sent();
                                return [
                                    2
                                ];
                        }
                    });
                })();
            }
        },
        {
            key: "getOrdersByMaker",
            value: /**
     * Fetch orders created by `maker`
     */ function getOrdersByMaker(maker, filters, /**
             * 1 - Valid orders,
             * 2 - Temporarily invalid orders,
             * 3 - Invalid orders.
             */ sort) {
                var _this = this;
                return _async_to_generator(function() {
                    var _filters_pager, _filters_pager1, _filters_statuses, _filters_makerAsset, _filters_takerAsset, params;
                    return _ts_generator(this, function(_state) {
                        params = {
                            limit: filters === null || filters === void 0 ? void 0 : (_filters_pager = filters.pager) === null || _filters_pager === void 0 ? void 0 : _filters_pager.limit.toString(),
                            page: filters === null || filters === void 0 ? void 0 : (_filters_pager1 = filters.pager) === null || _filters_pager1 === void 0 ? void 0 : _filters_pager1.page.toString(),
                            statuses: filters === null || filters === void 0 ? void 0 : (_filters_statuses = filters.statuses) === null || _filters_statuses === void 0 ? void 0 : _filters_statuses.join(','),
                            makerAsset: filters === null || filters === void 0 ? void 0 : (_filters_makerAsset = filters.makerAsset) === null || _filters_makerAsset === void 0 ? void 0 : _filters_makerAsset.toString(),
                            takerAsset: filters === null || filters === void 0 ? void 0 : (_filters_takerAsset = filters.takerAsset) === null || _filters_takerAsset === void 0 ? void 0 : _filters_takerAsset.toString(),
                            sortBy: sort
                        };
                        return [
                            2,
                            _this.httpClient.get(_this.url("/address/".concat(maker), params), _this.headers())
                        ];
                    });
                })();
            }
        },
        {
            key: "getOrderByHash",
            value: /**
     * Get limit order by hash
     *
     * Error will be thrown if order is not found
     */ function getOrderByHash(hash) {
                var _this = this;
                return _async_to_generator(function() {
                    return _ts_generator(this, function(_state) {
                        return [
                            2,
                            _this.httpClient.get(_this.url("/order/".concat(hash)), _this.headers())
                        ];
                    });
                })();
            }
        },
        {
            key: "getFeeParams",
            value: /**
     * Fetch current fee params, only orders with matched params can be submitted to 1inch relayer
     */ function getFeeParams(params) {
                var _this = this;
                return _async_to_generator(function() {
                    return _ts_generator(this, function(_state) {
                        return [
                            2,
                            _this.httpClient.get(_this.url("/fee-info", {
                                makerAsset: params.makerAsset.toString(),
                                takerAsset: params.takerAsset.toString(),
                                makerAmount: params.makerAmount.toString(),
                                takerAmount: params.takerAmount.toString()
                            }), _this.headers())
                        ];
                    });
                })();
            }
        },
        {
            key: "url",
            value: function url(path, params) {
                var query = params ? "?".concat(new URLSearchParams(Object.entries(params).filter(function(param) {
                    var _param = _sliced_to_array(param, 2), _ = _param[0], val = _param[1];
                    return val !== undefined;
                }))) : '';
                return "".concat(this.baseUrl, "/").concat(this.networkId).concat(path).concat(query);
            }
        },
        {
            key: "headers",
            value: function headers(additional) {
                return _object_spread({
                    Authorization: this.authHeader
                }, additional);
            }
        }
    ]);
    return Api;
}();
