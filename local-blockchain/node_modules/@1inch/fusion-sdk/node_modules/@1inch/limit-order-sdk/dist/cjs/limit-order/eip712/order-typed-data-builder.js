"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    buildOrderTypedData: function() {
        return buildOrderTypedData;
    },
    getDomainSeparator: function() {
        return getDomainSeparator;
    },
    getLimitOrderV4Domain: function() {
        return getLimitOrderV4Domain;
    },
    getOrderHash: function() {
        return getOrderHash;
    }
});
var _ethers = require("ethers");
var _domain = require("./domain.js");
var _constants = require("../../constants.js");
function getOrderHash(data) {
    return _ethers.ethers.TypedDataEncoder.hash(data.domain, {
        Order: data.types.Order
    }, data.message);
}
function buildOrderTypedData(chainId, verifyingContract, name, version, order) {
    return {
        primaryType: 'Order',
        types: {
            EIP712Domain: _domain.EIP712Domain,
            Order: _domain.Order
        },
        domain: {
            name: name,
            version: version,
            chainId: chainId,
            verifyingContract: verifyingContract
        },
        message: order
    };
}
function getDomainSeparator(name, version, chainId, verifyingContract) {
    return _ethers.ethers.TypedDataEncoder.hashStruct('EIP712Domain', {
        EIP712Domain: _domain.EIP712Domain
    }, {
        name: name,
        version: version,
        chainId: chainId,
        verifyingContract: verifyingContract
    });
}
function getLimitOrderV4Domain(chainId) {
    return {
        name: _domain.LimitOrderV4TypeDataName,
        version: _domain.LimitOrderV4TypeDataVersion,
        chainId: chainId,
        verifyingContract: (0, _constants.getLimitOrderContract)(chainId)
    };
}
