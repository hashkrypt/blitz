"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _limitorderwithfee = require("./limit-order-with-fee.js");
var _feetakerextension = require("./extensions/fee-taker/fee-taker.extension.js");
var _fees = require("./extensions/fee-taker/fees.js");
var _resolverfee = require("./extensions/fee-taker/resolver-fee.js");
var _integratorfee = require("./extensions/fee-taker/integrator-fee.js");
var _interaction = require("./interaction.js");
var _makertraits = require("./maker-traits.js");
var _address = require("../address.js");
var _bps = require("../bps.js");
describe('LimitOrderWithFee', function() {
    it('should create fromDataAndExtension', function() {
        var recipients = {
            integratorFeeRecipient: _address.Address.fromBigInt(2n),
            protocolFeeRecipient: _address.Address.fromBigInt(3n),
            tokensRecipient: _address.Address.fromBigInt(4n)
        };
        var extension = _feetakerextension.FeeTakerExtension.new(_address.Address.fromBigInt(1n), new _fees.Fees(new _resolverfee.ResolverFee(recipients.protocolFeeRecipient, _bps.Bps.fromPercent(2)), new _integratorfee.IntegratorFee(recipients.integratorFeeRecipient, recipients.protocolFeeRecipient, _bps.Bps.fromFraction(0.0001), _bps.Bps.fromPercent(5))), [
            _address.Address.fromBigInt(100n)
        ], {
            makerPermit: new _interaction.Interaction(_address.Address.fromBigInt(1n), '0xdeadbeef'),
            extraInteraction: new _interaction.Interaction(_address.Address.fromBigInt(99n), '0xdeadbeefdeadbeef'),
            customReceiver: recipients.tokensRecipient
        });
        var order = new _limitorderwithfee.LimitOrderWithFee({
            makerAsset: new _address.Address('0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'),
            takerAsset: new _address.Address('0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48'),
            makingAmount: 1000000000000000000n,
            takingAmount: 1420000000n,
            maker: new _address.Address('0x00000000219ab540356cbb839cbe05303d7705fa')
        }, _makertraits.MakerTraits.default(), extension);
        expect(_limitorderwithfee.LimitOrderWithFee.fromDataAndExtension(order.build(), order.extension)).toEqual(order);
    });
});
