import { ApiConfig, FeeInfoDTO, LimitOrderApiItem, SortKey, StatusKey } from './types.js';
import { Pager } from './pager.js';
import { LimitOrder } from '../limit-order/index.js';
import { Address } from '../address.js';
export declare class Api {
    private readonly baseUrl;
    private readonly networkId;
    private readonly httpClient;
    private readonly authHeader;
    constructor(config: ApiConfig);
    submitOrder(order: LimitOrder, signature: string): Promise<void>;
    getOrdersByMaker(maker: Address, filters?: {
        pager?: Pager;
        statuses?: StatusKey[];
        takerAsset?: Address;
        makerAsset?: Address;
    }, sort?: SortKey): Promise<LimitOrderApiItem[]>;
    getOrderByHash(hash: string): Promise<LimitOrderApiItem>;
    getFeeParams(params: {
        makerAsset: Address;
        takerAsset: Address;
        makerAmount: bigint;
        takerAmount: bigint;
    }): Promise<FeeInfoDTO>;
    private url;
    private headers;
}
